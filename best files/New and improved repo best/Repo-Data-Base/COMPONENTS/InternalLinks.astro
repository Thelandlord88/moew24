---
/**
 * Internal Links Component
 * Displays intelligent content recommendations based on proximity and relevance
 */
export interface Props {
  contentType: 'blog' | 'service' | 'service-location' | 'location';
  slug?: string;
  service?: string;
  suburb?: string;
  maxLinks?: number;
  title?: string;
}

const { 
  contentType, 
  slug, 
  service, 
  suburb, 
  maxLinks = 6,
  title = "Related Content"
} = Astro.props;

// Import link suggestions data
let linkSuggestions = [];
try {
  const linkData = await import('../../data/link-suggestions.json');
  
  // Generate key based on content type
  let key = '';
  if (contentType === 'blog' && slug) {
    key = `blog:${slug}`;
  } else if (contentType === 'service' && service) {
    key = `service:${service}`;
  } else if (contentType === 'service-location' && service && suburb) {
    key = `service-location:${service}:${suburb}`;
  } else if (contentType === 'location' && suburb) {
    key = `location:${suburb}`;
  }
  
  if (key && linkData.default?.suggestions?.[key]) {
    linkSuggestions = linkData.default.suggestions[key].slice(0, maxLinks);
  }
} catch (error) {
  console.warn('Link suggestions not available:', error.message);
}

// Filter out current page
const currentPath = Astro.url.pathname;
linkSuggestions = linkSuggestions.filter(link => link.url !== currentPath);

// Group links by type for better organization
const groupedLinks = linkSuggestions.reduce((groups, link) => {
  const type = link.type || 'other';
  if (!groups[type]) groups[type] = [];
  groups[type].push(link);
  return groups;
}, {});

// Type display names
const typeNames = {
  'blog': 'Related Articles',
  'service': 'Our Services',
  'service-location': 'Local Services',
  'location': 'Service Areas',
  'adjacent-location': 'Nearby Areas',
  'related-blog': 'You Might Also Like'
};
---

{linkSuggestions.length > 0 && (
  <div class="internal-links-container">
    <h3 class="text-2xl font-bold mb-6 text-gray-900">{title}</h3>
    
    {Object.entries(groupedLinks).map(([type, links]) => (
      <div class="link-group mb-8" key={type}>
        <h4 class="text-lg font-semibold mb-4 text-gray-800 border-b border-gray-200 pb-2">
          {typeNames[type] || 'Related'}
        </h4>
        
        <div class="grid gap-4 md:grid-cols-2 lg:grid-cols-3">
          {links.map((link, index) => (
            <a 
              href={link.url}
              class="link-card group block p-4 bg-white rounded-lg border border-gray-200 hover:border-brand hover:shadow-md transition-all duration-200"
              key={index}
            >
              <div class="flex items-start justify-between mb-2">
                <h5 class="font-semibold text-gray-900 group-hover:text-brand transition-colors line-clamp-2">
                  {link.title}
                </h5>
                <svg 
                  class="w-4 h-4 text-gray-400 group-hover:text-brand transition-colors flex-shrink-0 ml-2 mt-0.5" 
                  fill="none" 
                  stroke="currentColor" 
                  viewBox="0 0 24 24"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
                </svg>
              </div>
              
              {link.description && (
                <p class="text-sm text-gray-600 line-clamp-2 mb-3">
                  {link.description}
                </p>
              )}
              
              <div class="flex items-center justify-between">
                <span class="text-xs text-gray-500 uppercase tracking-wide">
                  {typeNames[type] || 'Related'}
                </span>
                {link.score && (
                  <span class="text-xs text-gray-400">
                    Relevance: {Math.round(link.score * 100)}%
                  </span>
                )}
              </div>
            </a>
          ))}
        </div>
      </div>
    ))}
    
    <!-- Call to Action -->
    <div class="cta-section mt-8 p-6 bg-brand-50 rounded-lg border border-brand-200">
      <h4 class="text-lg font-semibold mb-2 text-brand-900">
        Need Professional Cleaning Services?
      </h4>
      <p class="text-brand-700 mb-4">
        Get a free quote for professional cleaning services in your area. Same day service available.
      </p>
      <a 
        href="/quote" 
        class="inline-flex items-center px-4 py-2 bg-brand text-white rounded-md hover:bg-brand-600 transition-colors font-semibold"
      >
        Get Free Quote
        <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
        </svg>
      </a>
    </div>
  </div>
)}

<style>
  .internal-links-container {
    @apply border-t border-gray-200 pt-8 mt-12;
  }
  
  .link-card {
    min-height: 120px;
  }
  
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  @media (max-width: 640px) {
    .internal-links-container {
      @apply mt-8 pt-6;
    }
    
    .link-group .grid {
      @apply grid-cols-1;
    }
    
    .link-card {
      min-height: auto;
    }
  }
</style>