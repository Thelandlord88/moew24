---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { findSuburbBySlug } from '@/lib/suburbs';
import NearbySuburbs from '@/components/NearbySuburbs.astro';
import { getAllPosts } from '@/lib/blog';

export async function getStaticPaths() {
  const mods = import.meta.glob('/src/data/areas.clusters.json', { eager: true, import: 'default' }) as Record<string, { clusters: { suburbs: { slug: string }[] }[] } | undefined>;
  const data = Object.values(mods)[0];
  const slugs = data ? data.clusters.flatMap(c => c.suburbs.map(s => s.slug)) : [];
  return slugs.map(suburb => ({ params: { suburb } }));
}

const { suburb: slug } = Astro.params;
const sub = findSuburbBySlug(slug);
if (!sub) Astro.response.status = 404;

const posts = await getAllPosts();
const related = posts.filter(p => p.data.region === sub?.region).slice(0, 9);

const title = sub ? `Bond Cleaning in ${sub.name} | One N Done` : 'Not found';
const description = sub ? `Pricing, tips and guides for ${sub.name} and surrounding areas.` : '';
const canonical = sub ? `/suburbs/${sub.slug}/` : '/suburbs/';
const ld = sub && {
  "@context": "https://schema.org","@type": "Service",
  name: `Bond Cleaning in ${sub.name}`,
  areaServed: { "@type": "City", name: sub.name, containedInPlace: { "@type": "AdministrativeArea", name: sub.region ?? '' } },
  provider: { "@type": "LocalBusiness", "@id": (Astro.site?.toString().replace(/\/$/, '') || '') + "#business" }
};
function safeJsonLd(o:any){ return JSON.stringify(o).replace(/</g,"\\u003c"); }
---
<BaseLayout title={title} description={description} canonical={canonical}>
  {sub ? (
    <>
      <h1 class="text-3xl md:text-4xl font-extrabold mb-2">Bond Cleaning in {sub.name}</h1>
      <p class="text-slate-700 mb-6">Serving {sub.name}{sub.region ? ` (${sub.region})` : ''} and nearby suburbs.</p>

      <section class="mb-8">
        <h2 class="text-xl font-semibold mb-3">Popular services in {sub.name}</h2>
        <ul class="flex flex-wrap gap-3 text-sm">
          <li><a class="px-3 py-1 rounded-full border hover:bg-slate-50" href={`/services/bathroom-deep-clean/${sub.slug}/`}>Bathroom Deep Clean</a></li>
          <li><a class="px-3 py-1 rounded-full border hover:bg-slate-50" href={`/services/spring-clean/${sub.slug}/`}>Spring Clean</a></li>
        </ul>
      </section>

      <NearbySuburbs suburbSlug={sub.slug} title="Other nearby areas" />

      {related.length > 0 && (
        <section class="mt-10">
          <h2 class="text-xl font-bold mb-3">Recent articles for {sub.region}</h2>
          <ul class="grid gap-4 md:grid-cols-2">
            {related.map((p) => (
              <li class="border rounded p-4 hover:shadow-sm transition">
                <a href={`/blog/${p.slug}/`} class="text-lg font-semibold hover:text-sky-700">{p.data.title}</a>
                <p class="text-slate-600 mt-1">{p.data.description}</p>
              </li>
            ))}
          </ul>
        </section>
      )}

      <script type="application/ld+json" set:html={safeJsonLd(ld)} />
    </>
  ) : <p>Suburb not found.</p>}
</BaseLayout>
